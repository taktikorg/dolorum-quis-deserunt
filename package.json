{
  "name": "@taktikorg/dolorum-quis-deserunt",
  "version": "5.14.179",
  "description": "",
  "main": "index.js",
  "scripts": {},
  "author": "taktikangt6",
  "license": "MIT",
  "dependencies": {
    "@taktikorg/aut-distinctio-repellat": "^2.3.31",
    "@taktikorg/consectetur-quo-quos": "^1.1.34",
    "@taktikorg/corporis-nihil-odit": "^3.3.30",
    "@taktikorg/deleniti-qui-dolorem": "^1.1.34",
    "@taktikorg/dolor-ratione-quibusdam": "^2.1.33",
    "@taktikorg/fugit-voluptatibus-quod": "^3.5.28",
    "@taktikorg/harum-reprehenderit-perferendis": "^1.4.31",
    "@taktikorg/illo-iure-sint": "^1.1.34",
    "@taktikorg/illum-accusamus-possimus": "^1.3.27",
    "@taktikorg/ipsa-totam-aperiam": "^2.3.31",
    "@taktikorg/iste-ex-tempore": "^1.5.30",
    "@taktikorg/itaque-nam-eos": "^2.4.30",
    "@taktikorg/itaque-tempore-exercitationem": "^2.2.32",
    "@taktikorg/maiores-dolores-aut": "^2.5.29",
    "@taktikorg/molestias-fuga-possimus": "^2.6.28",
    "@taktikorg/nam-esse-animi": "^3.4.29",
    "@taktikorg/necessitatibus-repudiandae-officia": "^2.3.31",
    "@taktikorg/nisi-reprehenderit-amet": "^1.1.34",
    "@taktikorg/placeat-voluptates-dolorum": "^1.3.32",
    "@taktikorg/praesentium-dolorum-quis": "^1.2.33",
    "@taktikorg/praesentium-neque-ipsam": "^1.4.31",
    "@taktikorg/quo-reiciendis-quibusdam": "^1.4.31",
    "@taktikorg/recusandae-ratione-veniam": "^2.1.33",
    "@taktikorg/similique-earum-soluta": "^3.2.31",
    "@taktikorg/similique-natus-officia": "^2.3.31",
    "@taktikorg/suscipit-modi-ratione": "^2.1.33",
    "@taktikorg/tempore-veniam-in": "^3.1.32",
    "@taktikorg/unde-animi-omnis": "^1.5.30",
    "@taktikorg/velit-nobis-blanditiis": "^2.4.18",
    "@taktikorg/voluptatem-pariatur-tenetur": "^2.6.28"
  },
  "keywords": [
    "stable",
    "description",
    "find",
    "status",
    "mru",
    "write",
    "error",
    "react-component",
    "option",
    "which",
    "commander",
    "Object.getPrototypeOf",
    "includes",
    "progress",
    "npm",
    "Set",
    "module",
    "file system",
    "buffer",
    "schema",
    "whatwg",
    "route53",
    "es-shim API",
    "banner",
    "byteLength",
    "environment",
    "_.extend",
    "sigterm",
    "parser",
    "binary",
    "performance",
    "utilities",
    "fastify",
    "cjk",
    "self",
    "multi-package",
    "iteration",
    "toolkit",
    "assign",
    "function.length",
    "descriptor",
    "hot",
    "hasOwn",
    "value",
    "pretty",
    "cli",
    "global this value",
    "slice",
    "command-line",
    "rds",
    "flat",
    "handlers",
    "loadbalancing",
    "ECMAScript 5",
    "chinese",
    "WeakSet",
    "unicode",
    "classnames",
    "get",
    "call",
    "hardlinks",
    "emit",
    "writable",
    "args",
    "concat",
    "arktype",
    "promise",
    "weakmap",
    "codes",
    "callbound",
    "prune",
    "utils",
    "private",
    "String.prototype.matchAll",
    "tester",
    "Uint16Array",
    "in",
    "config",
    "gitignore",
    "a11y",
    "ES2017",
    "globals",
    "serializer",
    "iterator",
    "ECMAScript 7",
    "drop",
    "art",
    "ECMAScript",
    "key",
    "ECMAScript 6",
    "zero",
    "error-handling",
    "variables in css",
    "RegExp#flags",
    "time",
    "predictable",
    "logger",
    "redux",
    "make dir",
    "swf",
    "css-in-js",
    "eslintconfig",
    "optimizer",
    "ES8",
    "api",
    "sns",
    "columns",
    "dependencies",
    "harmony",
    "package manager",
    "typedarray",
    "valid",
    "ArrayBuffer#slice",
    "Float64Array",
    "exec",
    "eslintplugin",
    "json-schema-validation",
    "create",
    "parse",
    "apollo",
    "javascript",
    "polyfill",
    "Symbol",
    "Int32Array",
    "bound",
    "bundler",
    "configurable",
    "extra",
    "ECMAScript 2015",
    "assertion",
    "async",
    "jsx",
    "dynamodb",
    "process",
    "CSSStyleDeclaration",
    "jshint",
    "nope",
    "json-schema",
    "core",
    "remove",
    "stringifier",
    "Object.values",
    "merge",
    "window",
    "RegExp.prototype.flags",
    "warning",
    "ES2021",
    "test",
    "ES",
    "reuse",
    "graphql",
    "stateless",
    "password",
    "getPrototypeOf",
    "chai",
    "korean",
    "deep-clone",
    "escape",
    "workflow",
    "exit",
    "from",
    "styles",
    "loading",
    "channel",
    "jsonschema",
    "dom-testing-library",
    "ES6",
    "react-testing-library",
    "typesafe",
    "react-hook-form",
    "ignore",
    "linux",
    "user-streams",
    "TypeBox",
    "superstruct",
    "drag",
    "structuredClone",
    "Object.entries",
    "6to5",
    "ec2",
    "import",
    "moment",
    "glob",
    "directory",
    "patch",
    "asserts",
    "Uint32Array",
    "lockfile",
    "gestures",
    "signed",
    "log",
    "CSS",
    "browserlist",
    "amazon",
    "prototype",
    "prop",
    "readablestream",
    "setter",
    "typedarrays",
    "arraybuffer",
    "redact",
    "offset",
    "argv",
    "equal",
    "@@toStringTag",
    "bootstrap less",
    ".env",
    "fullwidth",
    "wait",
    "own",
    "rfc4122",
    "resolve",
    "keys",
    "protobuf",
    "color",
    "Float32Array",
    "visual",
    "styleguide",
    "ES2018",
    "AsyncIterator",
    "waf",
    "speed",
    "ECMAScript 2021",
    "higher-order",
    "computed-types",
    "Object.assign",
    "curried",
    "validator",
    "Uint8Array",
    "live",
    "css",
    "tc39",
    "language",
    "datastructure",
    "data",
    "byte",
    "findLastIndex",
    "ECMAScript 2017",
    "-0",
    "fantasy-land",
    "global",
    "Array.prototype.flat",
    "airbnb",
    "is",
    "form",
    "ES3",
    "extend",
    "ArrayBuffer",
    "replay",
    "sigint",
    "acorn",
    "serialization",
    "hasOwnProperty",
    "es-shims",
    "testing",
    "rfc9562",
    "react-hooks",
    "joi",
    "bcrypt",
    "picomatch",
    "validation",
    "es2016",
    "ECMAScript 2018",
    "s3",
    "signal",
    "Object.fromEntries",
    "classname",
    "function",
    "reversed",
    "link",
    "busy",
    "touch",
    "check"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/taktikorg/dolorum-quis-deserunt.git"
  },
  "homepage": "https://github.com/taktikorg/dolorum-quis-deserunt/#readme",
  "bugs": {
    "url": "https://github.com/taktikorg/dolorum-quis-deserunt/issues"
  }
}
